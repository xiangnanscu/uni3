user  {*NGINX_user*};
worker_processes {*NGINX_worker_processes*};


#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;
env NODE_ENV;
events {
  worker_connections {*NGINX_worker_connections*};
}

http {
  root {*NGINX_root*};
  resolver 223.5.5.5 ipv6=off;
  # variables_hash_max_size 2048;
  limit_req_zone $binary_remote_addr zone=one:2m rate={*NGINX_RATE_LIMIT*}r/s;
  include /usr/local/openresty/nginx/conf/mime.types;
  default_type {*NGINX_default_type*};
  client_max_body_size      {*NGINX_client_max_body_size*};
  client_body_buffer_size   {*NGINX_client_body_buffer_size*};
  encrypted_session_key {*NGINX_encrypted_session_key*};
  encrypted_session_iv {*NGINX_encrypted_session_iv*};
  encrypted_session_expires {*NGINX_encrypted_session_expires*};
  lua_ssl_verify_depth 2;
  lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
  log_format  main '$remote_addr [$time_local] "$request" $status $bytes_sent "$http_referer" "$http_user_agent" $request_time';

  access_log  logs/access.log  main buffer=32k;
  sendfile on;
  #tcp_nopush     on;

  #keepalive_timeout  0;
  keepalive_timeout 65;

  lua_socket_log_errors off;
  lua_shared_dict {*NGINX_lua_shared_dict*} 2M;
  # lua_shared_dict acme 2m;
  lua_package_path "./lualib/?.lua;;";
  lua_package_cpath "./resty_modules/lualib/?.so;;";
  # init_worker_by_lua_block {
  #     require("resty.acme.autossl").init_worker()
  # }
  init_by_lua_file ./init.lua;
  lua_code_cache {*NGINX_lua_code_cache*};
  {% if NODE_ENV == 'production' then %}
  server {
      listen 80 default;
      server_name _;
      return 444;
  }
  {% end %}
  {% if NGINX_USE_HTTPS == 'on' then %}
  server {
    listen 443 ssl;
    server_name {*NGINX_server_name*};
    include server.conf;
    {% if NGINX_CERTBOT_INIT == 'on' then %}
    ssl_certificate  default.pem;
    ssl_certificate_key default.key;
    {% else %}
    ssl_certificate  /etc/letsencrypt/live/{*NGINX_server_name*}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{*NGINX_server_name*}/privkey.pem;
    {% end %}
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;
    ssl_prefer_server_ciphers on;
    # ssl_certificate_by_lua_block {
    #   require("resty.acme.autossl").ssl_certificate()
    # }
    # location /.well-known {
    #   content_by_lua_block {
    #     require("resty.acme.autossl").serve_http_challenge()
    #   }
    # }
  }
  server {
    listen {*NGINX_listen*};
    server_name {*NGINX_server_name*};
    return 301 https://$server_name$request_uri;
  }
  {% else %}
  server {
    listen {*NGINX_listen*};
    server_name {*NGINX_server_name*};
    include server.conf;
  }
  {% end %}


  client_body_temp_path /tmp/client_body_temp;
  fastcgi_temp_path /tmp/fastcgi_temp;
  proxy_temp_path /tmp/proxy_temp;
  scgi_temp_path /tmp/scgi_temp;
  uwsgi_temp_path /tmp/uwsgi_temp;

  gzip on;
  gzip_disable "msie6";
  gzip_min_length 2k;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_types text/plain text/css application/json application/x-javascript text/xml;
}
